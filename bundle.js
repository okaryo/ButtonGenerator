/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/js/index.ts");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/css-loader/dist/cjs.js?!./src/stylesheet/index.css":
/*!**********************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js??ref--5-1!./src/stylesheet/index.css ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// Imports\nvar ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.i, \"body {\\n  padding: 0;\\n  margin: 0;\\n}\\n\\nol, li {\\n  margin: 0;\\n  padding: 0;\\n  list-style: none;\\n}\\n\\nheader {\\n  display: flex;\\n  align-items: center;\\n  height: 48px;\\n  padding: 0 16px;\\n  font-size: 20px;\\n  font-weight: 500;\\n  box-shadow: 0 0 4px rgba(0, 0, 0, 0.14);\\n}\\n\\nbutton {\\n  outline: none;\\n}\\n\\n.button_display_area {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  height: 30vh;\\n}\\n\\n.parameter_block {\\n  display: flex;\\n  flex-wrap: wrap;\\n  justify-content: center;\\n  padding: 0 20px;\\n  color: #333333;\\n}\\n\\n.parameter_menu {\\n  width: 45%;\\n  max-width: 300px;\\n  padding: 12px;\\n}\\n\\n.parameter_menu_header {\\n  margin: 0 0 8px;\\n  font-size: 18px;\\n  font-weight: 500;\\n}\\n\\n.parameter_list {\\n  box-sizing: border-box;\\n  max-height: 45vh;\\n  overflow-y: scroll;\\n}\\n\\n.parameter_unit + .parameter_unit {\\n  margin-top: 3px;\\n}\\n\\n.parameter_header {\\n  display: inline-block;\\n  margin: 0 5px 0 0;\\n  font-size: 14px;\\n  font-weight: 400;\\n}\\n\\n.parameter_value {\\n  font-size: 12px;\\n}\\n\\n.parameter_manipulator {\\n  display: block;\\n  width: 90%;\\n}\\n\\n.hover_active_checkbox {\\n  vertical-align: middle;\\n}\\n\\n.generate_code_block {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  justify-content: center;\\n  margin-top: 10px;\\n  padding: 20px;\\n  color: #333333;\\n}\\n\\n#generateCSSCodeButton {\\n  cursor: pointer;\\n}\\n\\n#generateCSSCodeArea {\\n  position: relative;\\n  display: none;\\n  margin-top: 20px;\\n  padding: 10px;\\n  max-width: 90%;\\n  overflow-x: scroll;\\n  font-weight: 900;\\n  background-color: #f5f5f5;\\n  border: 1px solid #cccccc;\\n  border-radius: 3px;\\n}\\n\\n#copyCSSCode {\\n  position: absolute;\\n  top: -1px;\\n  right: -1px;\\n  padding: 3px 6px;\\n  color: #767676;\\n  background-color: #ffffff;\\n  border: 1px solid #cccccc;\\n  border-radius: 0 3px 0 3px;\\n  cursor: pointer;\\n}\\n\\n#copyCSSCode:hover {\\n  color: #ffffff;\\n  background-color: #767676;\\n  border-color: #767676;\\n}\\n\\nfooter {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  height: 48px;\\n  font-size: 12px;\\n  color: #555555;\\n}\\n\\n.randomStyleClass1 {\\n  height: 73px;\\n  width: 200px;\\n  border: double 15px #f58a8a;\\n  border-radius: 50px;\\n  font-size: 16px;\\n  font-weight: 400;\\n  color: #cc3333;\\n  box-shadow: 6px 8px 12px 0px rgba(163, 163, 163, 0.75);\\n  background-color: #f58a8a;\\n}\\n\\n.randomStyleClass2  {\\n  height: 44px;\\n  width: 188px;\\n  border: dotted 4px #8a89e1;\\n  border-radius: 9px;\\n  font-size: 13px;\\n  font-weight: 400;\\n  color: #665824;\\n  box-shadow: 0px 0px 0px 0px rgba(255, 255, 255, 0.75);\\n  background-color: #eed3b4;\\n}\\n\\n.randomStyleClass3 {\\n  height: 100px;\\n  width: 73px;\\n  border: outset 2px #000000;\\n  border-radius: 2px;\\n  font-size: 13px;\\n  font-weight: 400;\\n  color: #000000;\\n  box-shadow: 0px 0px 0px 0px rgba(255, 255, 255, 0.75);\\n  background-color: #ffffff;\\n}\\n\\n.randomStyleClass4 {\\n  height: 62px;\\n  width: 181px;\\n  border: dashed 16px #f566ff;\\n  border-radius: 2px;\\n  font-size: 13px;\\n  font-weight: 400;\\n  color: #327765;\\n  box-shadow: 0px 0px 0px 0px rgba(255, 255, 255, 0.75);\\n  background-color: #00e682;\\n}\\n\\n.randomStyleClass5 {\\n  height: 100px;\\n  width: 100px;\\n  border: outset 1px #000000;\\n  border-radius: 50px;\\n  font-size: 13px;\\n  font-weight: 400;\\n  color: #227000;\\n  box-shadow: 0px 0px 33px 12px rgba(51, 255, 75, 0.75);\\n  background-color: #ffba42;\\n}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n\n\n//# sourceURL=webpack:///./src/stylesheet/index.css?./node_modules/css-loader/dist/cjs.js??ref--5-1");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/api.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join('');\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === 'string') {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || ''; // eslint-disable-next-line prefer-destructuring\n\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || '').concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n  return \"/*# \".concat(data, \" */\");\n}\n\n//# sourceURL=webpack:///./node_modules/css-loader/dist/runtime/api.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/*!****************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar isOldIE = function isOldIE() {\n  var memo;\n  return function memorize() {\n    if (typeof memo === 'undefined') {\n      // Test for IE <= 9 as proposed by Browserhacks\n      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n      // Tests for existence of standard globals is to allow style-loader\n      // to operate correctly into non-standard environments\n      // @see https://github.com/webpack-contrib/style-loader/issues/177\n      memo = Boolean(window && document && document.all && !window.atob);\n    }\n\n    return memo;\n  };\n}();\n\nvar getTarget = function getTarget() {\n  var memo = {};\n  return function memorize(target) {\n    if (typeof memo[target] === 'undefined') {\n      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n        try {\n          // This will throw an exception if access to iframe is blocked\n          // due to cross-origin restrictions\n          styleTarget = styleTarget.contentDocument.head;\n        } catch (e) {\n          // istanbul ignore next\n          styleTarget = null;\n        }\n      }\n\n      memo[target] = styleTarget;\n    }\n\n    return memo[target];\n  };\n}();\n\nvar stylesInDom = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDom.length; i++) {\n    if (stylesInDom[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var index = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3]\n    };\n\n    if (index !== -1) {\n      stylesInDom[index].references++;\n      stylesInDom[index].updater(obj);\n    } else {\n      stylesInDom.push({\n        identifier: identifier,\n        updater: addStyle(obj, options),\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction insertStyleElement(options) {\n  var style = document.createElement('style');\n  var attributes = options.attributes || {};\n\n  if (typeof attributes.nonce === 'undefined') {\n    var nonce =  true ? __webpack_require__.nc : undefined;\n\n    if (nonce) {\n      attributes.nonce = nonce;\n    }\n  }\n\n  Object.keys(attributes).forEach(function (key) {\n    style.setAttribute(key, attributes[key]);\n  });\n\n  if (typeof options.insert === 'function') {\n    options.insert(style);\n  } else {\n    var target = getTarget(options.insert || 'head');\n\n    if (!target) {\n      throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n    }\n\n    target.appendChild(style);\n  }\n\n  return style;\n}\n\nfunction removeStyleElement(style) {\n  // istanbul ignore if\n  if (style.parentNode === null) {\n    return false;\n  }\n\n  style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */\n\n\nvar replaceText = function replaceText() {\n  var textStore = [];\n  return function replace(index, replacement) {\n    textStore[index] = replacement;\n    return textStore.filter(Boolean).join('\\n');\n  };\n}();\n\nfunction applyToSingletonTag(style, index, remove, obj) {\n  var css = remove ? '' : obj.media ? \"@media \".concat(obj.media, \" {\").concat(obj.css, \"}\") : obj.css; // For old IE\n\n  /* istanbul ignore if  */\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = replaceText(index, css);\n  } else {\n    var cssNode = document.createTextNode(css);\n    var childNodes = style.childNodes;\n\n    if (childNodes[index]) {\n      style.removeChild(childNodes[index]);\n    }\n\n    if (childNodes.length) {\n      style.insertBefore(cssNode, childNodes[index]);\n    } else {\n      style.appendChild(cssNode);\n    }\n  }\n}\n\nfunction applyToTag(style, options, obj) {\n  var css = obj.css;\n  var media = obj.media;\n  var sourceMap = obj.sourceMap;\n\n  if (media) {\n    style.setAttribute('media', media);\n  } else {\n    style.removeAttribute('media');\n  }\n\n  if (sourceMap && btoa) {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    while (style.firstChild) {\n      style.removeChild(style.firstChild);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar singleton = null;\nvar singletonCounter = 0;\n\nfunction addStyle(obj, options) {\n  var style;\n  var update;\n  var remove;\n\n  if (options.singleton) {\n    var styleIndex = singletonCounter++;\n    style = singleton || (singleton = insertStyleElement(options));\n    update = applyToSingletonTag.bind(null, style, styleIndex, false);\n    remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n  } else {\n    style = insertStyleElement(options);\n    update = applyToTag.bind(null, style, options);\n\n    remove = function remove() {\n      removeStyleElement(style);\n    };\n  }\n\n  update(obj);\n  return function updateStyle(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n        return;\n      }\n\n      update(obj = newObj);\n    } else {\n      remove();\n    }\n  };\n}\n\nmodule.exports = function (list, options) {\n  options = options || {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n  // tags it will allow on a page\n\n  if (!options.singleton && typeof options.singleton !== 'boolean') {\n    options.singleton = isOldIE();\n  }\n\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    if (Object.prototype.toString.call(newList) !== '[object Array]') {\n      return;\n    }\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDom[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDom[_index].references === 0) {\n        stylesInDom[_index].updater();\n\n        stylesInDom.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js?");

/***/ }),

/***/ "./src/js/button.ts":
/*!**************************!*\
  !*** ./src/js/button.ts ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Button = void 0;\nvar Button = /** @class */ (function () {\n    function Button(targetId) {\n        this.targetButtonElement = document.getElementById(targetId);\n        this.height = '21px';\n        this.width = '54px';\n        this.borderRadius = '2px';\n        this.borderWidth = '1px';\n        this.borderStyle = 'outset';\n        this.borderColor = '#767676';\n        this.fontSize = '13px';\n        this.fontWeight = 400;\n        this.color = '#000000';\n        this.boxShadowX = '0px';\n        this.boxShadowY = '0px';\n        this.boxShadowBlur = '0px';\n        this.boxShadowSpread = '0px';\n        this.boxShadowColor = '#ffffff';\n        this.boxShadowOpacity = 0.75;\n        this.backgroundColor = '#efefef';\n        this.hoverBorderColor = {\n            status: false,\n            value: '#767676'\n        };\n        this.hoverColor = {\n            status: false,\n            value: '#000000'\n        };\n        this.hoverBoxShadowX = {\n            status: false,\n            value: '0px'\n        };\n        this.hoverBoxShadowY = {\n            status: false,\n            value: '0px'\n        };\n        this.hoverBoxShadowBlur = {\n            status: false,\n            value: '0px'\n        };\n        this.hoverBoxShadowSpread = {\n            status: false,\n            value: '0px'\n        };\n        this.hoverBoxShadowColor = {\n            status: false,\n            value: '#ffffff'\n        };\n        this.hoverBoxShadowOpacity = {\n            status: false,\n            value: 0.75\n        };\n        this.hoverBackgroundColor = {\n            status: false,\n            value: '#efefef'\n        };\n        this.activeBorderColor = {\n            status: false,\n            value: '#767676'\n        };\n        this.activeColor = {\n            status: false,\n            value: '#000000'\n        };\n        this.activeBoxShadowX = {\n            status: false,\n            value: '0px'\n        };\n        this.activeBoxShadowY = {\n            status: false,\n            value: '0px'\n        };\n        this.activeBoxShadowBlur = {\n            status: false,\n            value: '0px'\n        };\n        this.activeBoxShadowSpread = {\n            status: false,\n            value: '0px'\n        };\n        this.activeBoxShadowColor = {\n            status: false,\n            value: '#ffffff'\n        };\n        this.activeBoxShadowOpacity = {\n            status: false,\n            value: 0.75\n        };\n        this.activeBackgroundColor = {\n            status: false,\n            value: '#efefef'\n        };\n        this.initializeButtonParameter();\n        this.setHeightEventListener();\n        this.setWidthEventListener();\n        this.setBorderRadiusEventListener();\n        this.setBorderWidthEventListener();\n        this.setBorderStyleEventListener();\n        this.setBorderColorEventListener();\n        this.setFontSizeEventListener();\n        this.setFontWeightEventListener();\n        this.setColorEventListener();\n        this.setBoxShadowXEventListener();\n        this.setBoxShadowYEventListener();\n        this.setBoxShadowBlurEventListener();\n        this.setBoxShadowSpreadEventListener();\n        this.setBoxShadowOpacityEventListener();\n        this.setBoxShadowColorEventListener();\n        this.setBackgroundColorEventListener();\n        // for hover methods\n        this.setHoverEventListener();\n        this.setHoverBorderColorEventListener();\n        this.setHoverColorEventListener();\n        this.setHoverBoxShadowXEventListener();\n        this.setHoverBoxShadowYEventListener();\n        this.setHoverBoxShadowBlurEventListener();\n        this.setHoverBoxShadowSpreadEventListener();\n        this.setHoverBoxShadowColorEventListener();\n        this.setHoverBoxShadowOpacityEventListener();\n        this.setHoverBackgroundColorEventListener();\n        // for active methods\n        this.setActiveEventListener();\n        this.setActiveBorderColorEventListener();\n        this.setActiveColorEventListener();\n        this.setActiveBoxShadowXEventListener();\n        this.setActiveBoxShadowYEventListener();\n        this.setActiveBoxShadowBlurEventListener();\n        this.setActiveBoxShadowSpreadEventListener();\n        this.setActiveBoxShadowColorEventListener();\n        this.setActiveBoxShadowOpacityEventListener();\n        this.setActiveBackgroundColorEventListener();\n    }\n    Button.prototype.initializeButtonParameter = function () {\n        if (!this.targetButtonElement)\n            return;\n        var buttonStyle = this.targetButtonElement.style;\n        buttonStyle.height = this.height;\n        buttonStyle.width = this.width;\n        buttonStyle.borderRadius = this.borderRadius;\n        buttonStyle.borderWidth = this.borderWidth;\n        buttonStyle.borderStyle = this.borderStyle;\n        buttonStyle.borderColor = this.borderColor;\n        buttonStyle.fontSize = this.fontSize;\n        buttonStyle.fontWeight = String(this.fontWeight);\n        buttonStyle.color = this.color;\n        buttonStyle.boxShadow = '0px 0px 0px 0px rgba(255, 255, 255, 0.75)';\n        buttonStyle.backgroundColor = this.backgroundColor;\n    };\n    Button.prototype.setHeightEventListener = function () {\n        var _this = this;\n        var heightRange = document.getElementById('heightRange');\n        heightRange === null || heightRange === void 0 ? void 0 : heightRange.addEventListener('input', function (e) {\n            var target = e.target;\n            var heightDisplayValue = document.getElementById('heightDisplayValue');\n            if (_this.targetButtonElement && heightDisplayValue) {\n                _this.height = target.value + 'px';\n                _this.targetButtonElement.style.height = _this.height;\n                heightDisplayValue.innerText = _this.height;\n            }\n        });\n    };\n    Button.prototype.setWidthEventListener = function () {\n        var _this = this;\n        var widthRange = document.getElementById('widthRange');\n        widthRange === null || widthRange === void 0 ? void 0 : widthRange.addEventListener('input', function (e) {\n            var target = e.target;\n            var widthDisplayValue = document.getElementById('widthDisplayValue');\n            if (_this.targetButtonElement && widthDisplayValue) {\n                _this.width = target.value + 'px';\n                _this.targetButtonElement.style.width = _this.width;\n                widthDisplayValue.innerText = _this.width;\n            }\n        });\n    };\n    Button.prototype.setEventListener = function () {\n        var _this = this;\n        var widthRange = document.getElementById('widthRange');\n        widthRange === null || widthRange === void 0 ? void 0 : widthRange.addEventListener('input', function (e) {\n            var target = e.target;\n            var widthDisplayValue = document.getElementById('widthDisplayValue');\n            if (_this.targetButtonElement && widthDisplayValue) {\n                _this.width = target.value + 'px';\n                _this.targetButtonElement.style.width = _this.width;\n                widthDisplayValue.innerText = _this.width;\n            }\n        });\n    };\n    Button.prototype.setBorderRadiusEventListener = function () {\n        var _this = this;\n        var borderRadiusRange = document.getElementById('borderRadiusRange');\n        var borderRadiusDisplayValue = document.getElementById('borderRadiusDisplayValue');\n        borderRadiusRange === null || borderRadiusRange === void 0 ? void 0 : borderRadiusRange.addEventListener('input', function (e) {\n            var target = e.target;\n            if (_this.targetButtonElement && borderRadiusDisplayValue) {\n                _this.borderRadius = target.value + 'px';\n                _this.targetButtonElement.style.borderRadius = _this.borderRadius;\n                borderRadiusDisplayValue.innerText = _this.borderRadius;\n            }\n        });\n    };\n    Button.prototype.setBorderWidthEventListener = function () {\n        var _this = this;\n        var borderWidthRange = document.getElementById('borderWidthRange');\n        var borderWidthDisplayValue = document.getElementById('borderWidthDisplayValue');\n        borderWidthRange === null || borderWidthRange === void 0 ? void 0 : borderWidthRange.addEventListener('input', function (e) {\n            var target = e.target;\n            if (_this.targetButtonElement && borderWidthDisplayValue) {\n                _this.borderWidth = target.value + 'px';\n                _this.targetButtonElement.style.borderWidth = _this.borderWidth;\n                borderWidthDisplayValue.innerText = _this.borderWidth;\n            }\n        });\n    };\n    Button.prototype.setBorderStyleEventListener = function () {\n        var _this = this;\n        var borderStyleRange = document.getElementById('borderStyleRange');\n        var borderStyleDisplayValue = document.getElementById('borderStyleDisplayValue');\n        borderStyleRange === null || borderStyleRange === void 0 ? void 0 : borderStyleRange.addEventListener('input', function (e) {\n            var target = e.target;\n            if (_this.targetButtonElement && borderStyleDisplayValue) {\n                var borderStyleValues = ['none', 'hidden', 'solid', 'double', 'groove', 'ridge', 'inset', 'outset', 'dashed', 'dotted'];\n                _this.borderStyle = borderStyleValues[Number(target.value)];\n                _this.targetButtonElement.style.borderStyle = _this.borderStyle;\n                borderStyleDisplayValue.innerText = _this.borderStyle;\n            }\n        });\n    };\n    Button.prototype.setBorderColorEventListener = function () {\n        var _this = this;\n        var borderColorPicker = document.getElementById('borderColorPicker');\n        var borderColorDisplayValue = document.getElementById('borderColorDisplayValue');\n        borderColorPicker === null || borderColorPicker === void 0 ? void 0 : borderColorPicker.addEventListener('input', function (e) {\n            var target = e.target;\n            if (_this.targetButtonElement && borderColorDisplayValue) {\n                _this.borderColor = target.value;\n                _this.targetButtonElement.style.borderColor = _this.borderColor;\n                borderColorDisplayValue.innerText = _this.borderColor;\n            }\n        });\n    };\n    Button.prototype.setFontSizeEventListener = function () {\n        var _this = this;\n        var fontSizeRange = document.getElementById('fontSizeRange');\n        var fontSizeDisplayValue = document.getElementById('fontSizeDisplayValue');\n        fontSizeRange === null || fontSizeRange === void 0 ? void 0 : fontSizeRange.addEventListener('input', function (e) {\n            var target = e.target;\n            if (_this.targetButtonElement && fontSizeDisplayValue) {\n                _this.fontSize = target.value + 'px';\n                _this.targetButtonElement.style.fontSize = _this.fontSize;\n                fontSizeDisplayValue.innerText = _this.fontSize;\n            }\n        });\n    };\n    Button.prototype.setFontWeightEventListener = function () {\n        var _this = this;\n        var fontWeightRange = document.getElementById('fontWeightRange');\n        var fontWeightDisplayValue = document.getElementById('fontWeightDisplayValue');\n        fontWeightRange === null || fontWeightRange === void 0 ? void 0 : fontWeightRange.addEventListener('input', function (e) {\n            var target = e.target;\n            if (_this.targetButtonElement && fontWeightDisplayValue) {\n                _this.fontWeight = Number(target.value);\n                _this.targetButtonElement.style.fontWeight = String(_this.fontWeight);\n                fontWeightDisplayValue.innerText = String(_this.fontWeight);\n            }\n        });\n    };\n    Button.prototype.setColorEventListener = function () {\n        var _this = this;\n        var colorPicker = document.getElementById('colorPicker');\n        var colorDisplayValue = document.getElementById('colorDisplayValue');\n        colorPicker === null || colorPicker === void 0 ? void 0 : colorPicker.addEventListener('input', function (e) {\n            var target = e.target;\n            if (_this.targetButtonElement && colorDisplayValue) {\n                _this.color = target.value;\n                _this.targetButtonElement.style.color = _this.color;\n                colorDisplayValue.innerText = _this.color;\n            }\n        });\n    };\n    Button.prototype.setBoxShadowXEventListener = function () {\n        var _this = this;\n        var boxShadowXRange = document.getElementById('boxShadowXRange');\n        var boxShadowXDisplayValue = document.getElementById('boxShadowXDisplayValue');\n        boxShadowXRange === null || boxShadowXRange === void 0 ? void 0 : boxShadowXRange.addEventListener('input', function (e) {\n            var target = e.target;\n            if (_this.targetButtonElement && boxShadowXDisplayValue) {\n                var redValue = parseInt(_this.boxShadowColor.slice(1, 3), 16);\n                var greenValue = parseInt(_this.boxShadowColor.slice(3, 5), 16);\n                var blueValue = parseInt(_this.boxShadowColor.slice(5, 7), 16);\n                _this.boxShadowX = target.value + 'px';\n                _this.targetButtonElement.style.boxShadow = _this.boxShadowX + \" \" + _this.boxShadowY + \" \" + _this.boxShadowBlur + \" \" + _this.boxShadowSpread + \" rgba(\" + redValue + \", \" + greenValue + \", \" + blueValue + \", \" + _this.boxShadowOpacity + \")\";\n                boxShadowXDisplayValue.innerText = _this.boxShadowX;\n            }\n        });\n    };\n    Button.prototype.setBoxShadowYEventListener = function () {\n        var _this = this;\n        var boxShadowYRange = document.getElementById('boxShadowYRange');\n        var boxShadowYDisplayValue = document.getElementById('boxShadowYDisplayValue');\n        boxShadowYRange === null || boxShadowYRange === void 0 ? void 0 : boxShadowYRange.addEventListener('input', function (e) {\n            var target = e.target;\n            if (_this.targetButtonElement && boxShadowYDisplayValue) {\n                var redValue = parseInt(_this.boxShadowColor.slice(1, 3), 16);\n                var greenValue = parseInt(_this.boxShadowColor.slice(3, 5), 16);\n                var blueValue = parseInt(_this.boxShadowColor.slice(5, 7), 16);\n                _this.boxShadowY = target.value + 'px';\n                _this.targetButtonElement.style.boxShadow = _this.boxShadowX + \" \" + _this.boxShadowY + \" \" + _this.boxShadowBlur + \" \" + _this.boxShadowSpread + \" rgba(\" + redValue + \", \" + greenValue + \", \" + blueValue + \", \" + _this.boxShadowOpacity + \")\";\n                boxShadowYDisplayValue.innerText = _this.boxShadowY;\n            }\n        });\n    };\n    Button.prototype.setBoxShadowBlurEventListener = function () {\n        var _this = this;\n        var boxShadowBlurRange = document.getElementById('boxShadowBlurRange');\n        var boxShadowBlurDisplayValue = document.getElementById('boxShadowBlurDisplayValue');\n        boxShadowBlurRange === null || boxShadowBlurRange === void 0 ? void 0 : boxShadowBlurRange.addEventListener('input', function (e) {\n            var target = e.target;\n            if (_this.targetButtonElement && boxShadowBlurDisplayValue) {\n                var redValue = parseInt(_this.boxShadowColor.slice(1, 3), 16);\n                var greenValue = parseInt(_this.boxShadowColor.slice(3, 5), 16);\n                var blueValue = parseInt(_this.boxShadowColor.slice(5, 7), 16);\n                _this.boxShadowBlur = target.value + 'px';\n                _this.targetButtonElement.style.boxShadow = _this.boxShadowX + \" \" + _this.boxShadowY + \" \" + _this.boxShadowBlur + \" \" + _this.boxShadowSpread + \" rgba(\" + redValue + \", \" + greenValue + \", \" + blueValue + \", \" + _this.boxShadowOpacity + \")\";\n                boxShadowBlurDisplayValue.innerText = _this.boxShadowBlur;\n            }\n        });\n    };\n    Button.prototype.setBoxShadowSpreadEventListener = function () {\n        var _this = this;\n        var boxShadowSpreadRange = document.getElementById('boxShadowSpreadRange');\n        var boxShadowSpreadDisplayValue = document.getElementById('boxShadowSpreadDisplayValue');\n        boxShadowSpreadRange === null || boxShadowSpreadRange === void 0 ? void 0 : boxShadowSpreadRange.addEventListener('input', function (e) {\n            var target = e.target;\n            if (_this.targetButtonElement && boxShadowSpreadDisplayValue) {\n                var redValue = parseInt(_this.boxShadowColor.slice(1, 3), 16);\n                var greenValue = parseInt(_this.boxShadowColor.slice(3, 5), 16);\n                var blueValue = parseInt(_this.boxShadowColor.slice(5, 7), 16);\n                _this.boxShadowSpread = target.value + 'px';\n                _this.targetButtonElement.style.boxShadow = _this.boxShadowX + \" \" + _this.boxShadowY + \" \" + _this.boxShadowBlur + \" \" + _this.boxShadowSpread + \" rgba(\" + redValue + \", \" + greenValue + \", \" + blueValue + \", \" + _this.boxShadowOpacity + \")\";\n                boxShadowSpreadDisplayValue.innerText = _this.boxShadowSpread;\n            }\n        });\n    };\n    Button.prototype.setBoxShadowColorEventListener = function () {\n        var _this = this;\n        var boxShadowColorPicker = document.getElementById('boxShadowColorPicker');\n        var boxShadowColorDisplayValue = document.getElementById('boxShadowColorDisplayValue');\n        boxShadowColorPicker === null || boxShadowColorPicker === void 0 ? void 0 : boxShadowColorPicker.addEventListener('input', function (e) {\n            var target = e.target;\n            if (_this.targetButtonElement && boxShadowColorDisplayValue) {\n                var redValue = parseInt(_this.boxShadowColor.slice(1, 3), 16);\n                var greenValue = parseInt(_this.boxShadowColor.slice(3, 5), 16);\n                var blueValue = parseInt(_this.boxShadowColor.slice(5, 7), 16);\n                _this.boxShadowColor = target.value;\n                _this.targetButtonElement.style.boxShadow = _this.boxShadowX + \" \" + _this.boxShadowY + \" \" + _this.boxShadowBlur + \" \" + _this.boxShadowSpread + \" rgba(\" + redValue + \", \" + greenValue + \", \" + blueValue + \", \" + _this.boxShadowOpacity + \")\";\n                boxShadowColorDisplayValue.innerText = _this.boxShadowColor;\n            }\n        });\n    };\n    Button.prototype.setBoxShadowOpacityEventListener = function () {\n        var _this = this;\n        var boxShadowOpacityRange = document.getElementById('boxShadowOpacityRange');\n        var boxShadowOpacityDisplayValue = document.getElementById('boxShadowOpacityDisplayValue');\n        boxShadowOpacityRange === null || boxShadowOpacityRange === void 0 ? void 0 : boxShadowOpacityRange.addEventListener('input', function (e) {\n            var target = e.target;\n            if (_this.targetButtonElement && boxShadowOpacityDisplayValue) {\n                var redValue = parseInt(_this.boxShadowColor.slice(1, 3), 16);\n                var greenValue = parseInt(_this.boxShadowColor.slice(3, 5), 16);\n                var blueValue = parseInt(_this.boxShadowColor.slice(5, 7), 16);\n                _this.boxShadowOpacity = Number(target.value);\n                _this.targetButtonElement.style.boxShadow = _this.boxShadowX + \" \" + _this.boxShadowY + \" \" + _this.boxShadowBlur + \" \" + _this.boxShadowSpread + \" rgba(\" + redValue + \", \" + greenValue + \", \" + blueValue + \", \" + _this.boxShadowOpacity + \")\";\n                boxShadowOpacityDisplayValue.innerText = String(_this.boxShadowOpacity);\n            }\n        });\n    };\n    Button.prototype.setBackgroundColorEventListener = function () {\n        var _this = this;\n        var backgroundColorPicker = document.getElementById('backgroundColorPicker');\n        var backgroundColorDisplayValue = document.getElementById('backgroundColorDisplayValue');\n        backgroundColorPicker === null || backgroundColorPicker === void 0 ? void 0 : backgroundColorPicker.addEventListener('input', function (e) {\n            var target = e.target;\n            if (_this.targetButtonElement && backgroundColorDisplayValue) {\n                _this.backgroundColor = target.value;\n                _this.targetButtonElement.style.backgroundColor = _this.backgroundColor;\n                backgroundColorDisplayValue.innerText = _this.backgroundColor;\n            }\n        });\n    };\n    // for hover methods\n    Button.prototype.setHoverEventListener = function () {\n        var _this = this;\n        var _a, _b;\n        (_a = this.targetButtonElement) === null || _a === void 0 ? void 0 : _a.addEventListener('mouseover', function (e) {\n            var targetButton = e.target;\n            targetButton.style.borderColor = _this.hoverBorderColor.status ? _this.hoverBorderColor.value : _this.borderColor;\n            targetButton.style.color = _this.hoverColor.status ? _this.hoverColor.value : _this.color;\n            targetButton.style.backgroundColor = _this.hoverBackgroundColor.status ? _this.hoverBackgroundColor.value : _this.backgroundColor;\n            var boxShadowProperty = '';\n            boxShadowProperty += _this.hoverBoxShadowX.status ? _this.hoverBoxShadowX.value + \" \" : _this.boxShadowX + \" \";\n            boxShadowProperty += _this.hoverBoxShadowY.status ? _this.hoverBoxShadowY.value + \" \" : _this.boxShadowY + \" \";\n            boxShadowProperty += _this.hoverBoxShadowBlur.status ? _this.hoverBoxShadowBlur.value + \" \" : _this.boxShadowBlur + \" \";\n            boxShadowProperty += _this.hoverBoxShadowSpread.status ? _this.hoverBoxShadowSpread.value + \" \" : _this.boxShadowSpread + \" \";\n            var boxShadowColorRed = _this.hoverBoxShadowColor.status ? parseInt(_this.hoverBoxShadowColor.value.slice(1, 3), 16) : parseInt(_this.boxShadowColor.slice(1, 3), 16);\n            var boxShadowColorGreen = _this.hoverBoxShadowColor.status ? parseInt(_this.hoverBoxShadowColor.value.slice(3, 5), 16) : parseInt(_this.boxShadowColor.slice(3, 5), 16);\n            var boxShadowColorBlue = _this.hoverBoxShadowColor.status ? parseInt(_this.hoverBoxShadowColor.value.slice(5, 7), 16) : parseInt(_this.boxShadowColor.slice(5, 7), 16);\n            var boxShadowOpacity = _this.hoverBoxShadowOpacity.status ? _this.hoverBoxShadowOpacity.value : _this.boxShadowOpacity;\n            boxShadowProperty += \"rgba(\" + boxShadowColorRed + \", \" + boxShadowColorGreen + \", \" + boxShadowColorBlue + \", \" + boxShadowOpacity + \")\";\n            targetButton.style.boxShadow = boxShadowProperty;\n        });\n        (_b = this.targetButtonElement) === null || _b === void 0 ? void 0 : _b.addEventListener('mouseleave', function (e) {\n            var targetButton = e.target;\n            var redValue = parseInt(_this.boxShadowColor.slice(1, 3), 16);\n            var greenValue = parseInt(_this.boxShadowColor.slice(3, 5), 16);\n            var blueValue = parseInt(_this.boxShadowColor.slice(5, 7), 16);\n            targetButton.style.borderColor = _this.borderColor;\n            targetButton.style.color = _this.color;\n            targetButton.style.boxShadow = _this.boxShadowX + \" \" + _this.boxShadowY + \" \" + _this.boxShadowBlur + \" \" + _this.boxShadowSpread + \" rgba(\" + redValue + \", \" + greenValue + \", \" + blueValue + \", \" + _this.boxShadowOpacity + \")\";\n            targetButton.style.backgroundColor = _this.backgroundColor;\n        });\n    };\n    Button.prototype.setHoverBorderColorEventListener = function () {\n        var _this = this;\n        var borderColorHoverCheckBox = document.getElementById('borderColorHoverCheckBox');\n        var borderColorHoverPicker = document.getElementById('borderColorHoverPicker');\n        var borderColorHoverDisplayValue = document.getElementById('borderColorHoverDisplayValue');\n        if (!(borderColorHoverCheckBox && borderColorHoverPicker && borderColorHoverDisplayValue))\n            return;\n        borderColorHoverPicker.addEventListener('input', function (e) {\n            var target = e.target;\n            _this.hoverBorderColor.value = target.value;\n            borderColorHoverDisplayValue.innerText = target.value;\n        });\n        borderColorHoverCheckBox.addEventListener('change', function (e) {\n            var targetCheckbox = e.target;\n            if (targetCheckbox.checked) {\n                _this.hoverBorderColor.status = true;\n            }\n            else {\n                _this.hoverBorderColor.status = false;\n            }\n        });\n    };\n    Button.prototype.setHoverColorEventListener = function () {\n        var _this = this;\n        var colorHoverCheckBox = document.getElementById('colorHoverCheckBox');\n        var colorHoverPicker = document.getElementById('colorHoverPicker');\n        var colorHoverDisplayValue = document.getElementById('colorHoverDisplayValue');\n        if (!(colorHoverCheckBox && colorHoverPicker && colorHoverDisplayValue))\n            return;\n        colorHoverPicker.addEventListener('input', function (e) {\n            var target = e.target;\n            _this.hoverColor.value = target.value;\n            colorHoverDisplayValue.innerText = target.value;\n        });\n        colorHoverCheckBox.addEventListener('change', function (e) {\n            var targetCheckbox = e.target;\n            if (targetCheckbox.checked) {\n                _this.hoverColor.status = true;\n            }\n            else {\n                _this.hoverColor.status = false;\n            }\n        });\n    };\n    Button.prototype.setHoverBoxShadowXEventListener = function () {\n        var _this = this;\n        var boxShadowXHoverCheckBox = document.getElementById('boxShadowXHoverCheckBox');\n        var boxShadowXHoverRange = document.getElementById('boxShadowXHoverRange');\n        var boxShadowXHoverDisplayValue = document.getElementById('boxShadowXHoverDisplayValue');\n        if (!(boxShadowXHoverCheckBox && boxShadowXHoverRange && boxShadowXHoverDisplayValue))\n            return;\n        boxShadowXHoverRange.addEventListener('input', function (e) {\n            var target = e.target;\n            _this.hoverBoxShadowX.value = target.value + 'px';\n            boxShadowXHoverDisplayValue.innerText = target.value + 'px';\n        });\n        boxShadowXHoverCheckBox.addEventListener('change', function (e) {\n            var targetCheckbox = e.target;\n            if (targetCheckbox.checked) {\n                _this.hoverBoxShadowX.status = true;\n            }\n            else {\n                _this.hoverBoxShadowX.status = false;\n            }\n        });\n    };\n    Button.prototype.setHoverBoxShadowYEventListener = function () {\n        var _this = this;\n        var boxShadowYHoverCheckBox = document.getElementById('boxShadowYHoverCheckBox');\n        var boxShadowYHoverRange = document.getElementById('boxShadowYHoverRange');\n        var boxShadowYHoverDisplayValue = document.getElementById('boxShadowYHoverDisplayValue');\n        if (!(boxShadowYHoverCheckBox && boxShadowYHoverRange && boxShadowYHoverDisplayValue))\n            return;\n        boxShadowYHoverRange.addEventListener('input', function (e) {\n            var target = e.target;\n            _this.hoverBoxShadowY.value = target.value + 'px';\n            boxShadowYHoverDisplayValue.innerText = target.value + 'px';\n        });\n        boxShadowYHoverCheckBox.addEventListener('change', function (e) {\n            var targetCheckbox = e.target;\n            if (targetCheckbox.checked) {\n                _this.hoverBoxShadowY.status = true;\n            }\n            else {\n                _this.hoverBoxShadowY.status = false;\n            }\n        });\n    };\n    Button.prototype.setHoverBoxShadowBlurEventListener = function () {\n        var _this = this;\n        var boxShadowBlurHoverCheckBox = document.getElementById('boxShadowBlurHoverCheckBox');\n        var boxShadowBlurHoverRange = document.getElementById('boxShadowBlurHoverRange');\n        var boxShadowBlurHoverDisplayValue = document.getElementById('boxShadowBlurHoverDisplayValue');\n        if (!(boxShadowBlurHoverCheckBox && boxShadowBlurHoverRange && boxShadowBlurHoverDisplayValue))\n            return;\n        boxShadowBlurHoverRange.addEventListener('input', function (e) {\n            var target = e.target;\n            _this.hoverBoxShadowBlur.value = target.value + 'px';\n            boxShadowBlurHoverDisplayValue.innerText = target.value + 'px';\n        });\n        boxShadowBlurHoverCheckBox.addEventListener('change', function (e) {\n            var targetCheckbox = e.target;\n            if (targetCheckbox.checked) {\n                _this.hoverBoxShadowBlur.status = true;\n            }\n            else {\n                _this.hoverBoxShadowBlur.status = false;\n            }\n        });\n    };\n    Button.prototype.setHoverBoxShadowSpreadEventListener = function () {\n        var _this = this;\n        var boxShadowSpreadHoverCheckBox = document.getElementById('boxShadowSpreadHoverCheckBox');\n        var boxShadowSpreadHoverRange = document.getElementById('boxShadowSpreadHoverRange');\n        var boxShadowSpreadHoverDisplayValue = document.getElementById('boxShadowSpreadHoverDisplayValue');\n        if (!(boxShadowSpreadHoverCheckBox && boxShadowSpreadHoverRange && boxShadowSpreadHoverDisplayValue))\n            return;\n        boxShadowSpreadHoverRange.addEventListener('input', function (e) {\n            var target = e.target;\n            _this.hoverBoxShadowSpread.value = target.value + 'px';\n            boxShadowSpreadHoverDisplayValue.innerText = target.value + 'px';\n        });\n        boxShadowSpreadHoverCheckBox.addEventListener('change', function (e) {\n            var targetCheckbox = e.target;\n            if (targetCheckbox.checked) {\n                _this.hoverBoxShadowSpread.status = true;\n            }\n            else {\n                _this.hoverBoxShadowSpread.status = false;\n            }\n        });\n    };\n    Button.prototype.setHoverBoxShadowColorEventListener = function () {\n        var _this = this;\n        var boxShadowColorHoverCheckBox = document.getElementById('boxShadowColorHoverCheckBox');\n        var boxShadowColorHoverPicker = document.getElementById('boxShadowColorHoverPicker');\n        var boxShadowColorHoverDisplayValue = document.getElementById('boxShadowColorHoverDisplayValue');\n        if (!(boxShadowColorHoverCheckBox && boxShadowColorHoverPicker && boxShadowColorHoverDisplayValue))\n            return;\n        boxShadowColorHoverPicker.addEventListener('input', function (e) {\n            var target = e.target;\n            _this.hoverBoxShadowColor.value = target.value;\n            boxShadowColorHoverDisplayValue.innerText = target.value;\n        });\n        boxShadowColorHoverCheckBox.addEventListener('change', function (e) {\n            var targetCheckbox = e.target;\n            if (targetCheckbox.checked) {\n                _this.hoverBoxShadowColor.status = true;\n            }\n            else {\n                _this.hoverBoxShadowColor.status = false;\n            }\n        });\n    };\n    Button.prototype.setHoverBoxShadowOpacityEventListener = function () {\n        var _this = this;\n        var boxShadowOpacityHoverCheckBox = document.getElementById('boxShadowOpacityHoverCheckBox');\n        var boxShadowOpacityHoverRange = document.getElementById('boxShadowOpacityHoverRange');\n        var boxShadowOpacityHoverDisplayValue = document.getElementById('boxShadowOpacityHoverDisplayValue');\n        if (!(boxShadowOpacityHoverCheckBox && boxShadowOpacityHoverRange && boxShadowOpacityHoverDisplayValue))\n            return;\n        boxShadowOpacityHoverRange.addEventListener('input', function (e) {\n            var target = e.target;\n            _this.hoverBoxShadowOpacity.value = target.value;\n            boxShadowOpacityHoverDisplayValue.innerText = target.value;\n        });\n        boxShadowOpacityHoverCheckBox.addEventListener('change', function (e) {\n            var targetCheckbox = e.target;\n            if (targetCheckbox.checked) {\n                _this.hoverBoxShadowOpacity.status = true;\n            }\n            else {\n                _this.hoverBoxShadowOpacity.status = false;\n            }\n        });\n    };\n    Button.prototype.setHoverBackgroundColorEventListener = function () {\n        var _this = this;\n        var backgroundColorHoverCheckBox = document.getElementById('backgroundColorHoverCheckBox');\n        var backgroundColorHoverPicker = document.getElementById('backgroundColorHoverPicker');\n        var backgroundColorHoverDisplayValue = document.getElementById('backgroundColorHoverDisplayValue');\n        if (!(backgroundColorHoverCheckBox && backgroundColorHoverPicker && backgroundColorHoverDisplayValue))\n            return;\n        backgroundColorHoverPicker.addEventListener('input', function (e) {\n            var target = e.target;\n            _this.hoverBackgroundColor.value = target.value;\n            backgroundColorHoverDisplayValue.innerText = target.value;\n        });\n        backgroundColorHoverCheckBox.addEventListener('change', function (e) {\n            var targetCheckbox = e.target;\n            if (targetCheckbox.checked) {\n                _this.hoverBackgroundColor.status = true;\n            }\n            else {\n                _this.hoverBackgroundColor.status = false;\n            }\n        });\n    };\n    // for active methods\n    Button.prototype.setActiveEventListener = function () {\n        var _this = this;\n        var _a, _b;\n        (_a = this.targetButtonElement) === null || _a === void 0 ? void 0 : _a.addEventListener('mousedown', function (e) {\n            var targetButton = e.target;\n            targetButton.style.borderColor = _this.activeBorderColor.status ? _this.activeBorderColor.value : _this.borderColor;\n            targetButton.style.color = _this.activeColor.status ? _this.activeColor.value : _this.color;\n            targetButton.style.backgroundColor = _this.activeBackgroundColor.status ? _this.activeBackgroundColor.value : _this.backgroundColor;\n            var boxShadowProperty = '';\n            boxShadowProperty += _this.activeBoxShadowX.status ? _this.activeBoxShadowX.value + \" \" : _this.boxShadowX + \" \";\n            boxShadowProperty += _this.activeBoxShadowY.status ? _this.activeBoxShadowY.value + \" \" : _this.boxShadowY + \" \";\n            boxShadowProperty += _this.activeBoxShadowBlur.status ? _this.activeBoxShadowBlur.value + \" \" : _this.boxShadowBlur + \" \";\n            boxShadowProperty += _this.activeBoxShadowSpread.status ? _this.activeBoxShadowSpread.value + \" \" : _this.boxShadowSpread + \" \";\n            var boxShadowColorRed = _this.activeBoxShadowColor.status ? parseInt(_this.activeBoxShadowColor.value.slice(1, 3), 16) : parseInt(_this.boxShadowColor.slice(1, 3), 16);\n            var boxShadowColorGreen = _this.activeBoxShadowColor.status ? parseInt(_this.activeBoxShadowColor.value.slice(3, 5), 16) : parseInt(_this.boxShadowColor.slice(3, 5), 16);\n            var boxShadowColorBlue = _this.activeBoxShadowColor.status ? parseInt(_this.activeBoxShadowColor.value.slice(5, 7), 16) : parseInt(_this.boxShadowColor.slice(5, 7), 16);\n            var boxShadowOpacity = _this.activeBoxShadowOpacity.status ? _this.activeBoxShadowOpacity.value : _this.boxShadowOpacity;\n            boxShadowProperty += \"rgba(\" + boxShadowColorRed + \", \" + boxShadowColorGreen + \", \" + boxShadowColorBlue + \", \" + boxShadowOpacity + \")\";\n            targetButton.style.boxShadow = boxShadowProperty;\n        });\n        (_b = this.targetButtonElement) === null || _b === void 0 ? void 0 : _b.addEventListener('mouseup', function (e) {\n            var targetButton = e.target;\n            var redValue = parseInt(_this.boxShadowColor.slice(1, 3), 16);\n            var greenValue = parseInt(_this.boxShadowColor.slice(3, 5), 16);\n            var blueValue = parseInt(_this.boxShadowColor.slice(5, 7), 16);\n            targetButton.style.borderColor = _this.borderColor;\n            targetButton.style.color = _this.color;\n            targetButton.style.boxShadow = _this.boxShadowX + \" \" + _this.boxShadowY + \" \" + _this.boxShadowBlur + \" \" + _this.boxShadowSpread + \" rgba(\" + redValue + \", \" + greenValue + \", \" + blueValue + \", \" + _this.boxShadowOpacity + \")\";\n            targetButton.style.backgroundColor = _this.backgroundColor;\n        });\n    };\n    Button.prototype.setActiveBorderColorEventListener = function () {\n        var _this = this;\n        var borderColorActiveCheckBox = document.getElementById('borderColorActiveCheckBox');\n        var borderColorActivePicker = document.getElementById('borderColorActivePicker');\n        var borderColorActiveDisplayValue = document.getElementById('borderColorActiveDisplayValue');\n        if (!(borderColorActiveCheckBox && borderColorActivePicker && borderColorActiveDisplayValue))\n            return;\n        borderColorActivePicker.addEventListener('input', function (e) {\n            var target = e.target;\n            _this.activeBorderColor.value = target.value;\n            borderColorActiveDisplayValue.innerText = target.value;\n        });\n        borderColorActiveCheckBox.addEventListener('change', function (e) {\n            var targetCheckbox = e.target;\n            if (targetCheckbox.checked) {\n                _this.activeBorderColor.status = true;\n            }\n            else {\n                _this.activeBorderColor.status = false;\n            }\n        });\n    };\n    Button.prototype.setActiveColorEventListener = function () {\n        var _this = this;\n        var colorActiveCheckBox = document.getElementById('colorActiveCheckBox');\n        var colorActivePicker = document.getElementById('colorActivePicker');\n        var colorActiveDisplayValue = document.getElementById('colorActiveDisplayValue');\n        if (!(colorActiveCheckBox && colorActivePicker && colorActiveDisplayValue))\n            return;\n        colorActivePicker.addEventListener('input', function (e) {\n            var target = e.target;\n            _this.activeColor.value = target.value;\n            colorActiveDisplayValue.innerText = target.value;\n        });\n        colorActiveCheckBox.addEventListener('change', function (e) {\n            var targetCheckbox = e.target;\n            if (targetCheckbox.checked) {\n                _this.activeColor.status = true;\n            }\n            else {\n                _this.activeColor.status = false;\n            }\n        });\n    };\n    Button.prototype.setActiveBoxShadowXEventListener = function () {\n        var _this = this;\n        var boxShadowXActiveCheckBox = document.getElementById('boxShadowXActiveCheckBox');\n        var boxShadowXActiveRange = document.getElementById('boxShadowXActiveRange');\n        var boxShadowXActiveDisplayValue = document.getElementById('boxShadowXActiveDisplayValue');\n        if (!(boxShadowXActiveCheckBox && boxShadowXActiveRange && boxShadowXActiveDisplayValue))\n            return;\n        boxShadowXActiveRange.addEventListener('input', function (e) {\n            var target = e.target;\n            _this.activeBoxShadowX.value = target.value + 'px';\n            boxShadowXActiveDisplayValue.innerText = target.value + 'px';\n        });\n        boxShadowXActiveCheckBox.addEventListener('change', function (e) {\n            var targetCheckbox = e.target;\n            if (targetCheckbox.checked) {\n                _this.activeBoxShadowX.status = true;\n            }\n            else {\n                _this.activeBoxShadowX.status = false;\n            }\n        });\n    };\n    Button.prototype.setActiveBoxShadowYEventListener = function () {\n        var _this = this;\n        var boxShadowYActiveCheckBox = document.getElementById('boxShadowYActiveCheckBox');\n        var boxShadowYActiveRange = document.getElementById('boxShadowYActiveRange');\n        var boxShadowYActiveDisplayValue = document.getElementById('boxShadowYActiveDisplayValue');\n        if (!(boxShadowYActiveCheckBox && boxShadowYActiveRange && boxShadowYActiveDisplayValue))\n            return;\n        boxShadowYActiveRange.addEventListener('input', function (e) {\n            var target = e.target;\n            _this.activeBoxShadowY.value = target.value + 'px';\n            boxShadowYActiveDisplayValue.innerText = target.value + 'px';\n        });\n        boxShadowYActiveCheckBox.addEventListener('change', function (e) {\n            var targetCheckbox = e.target;\n            if (targetCheckbox.checked) {\n                _this.activeBoxShadowY.status = true;\n            }\n            else {\n                _this.activeBoxShadowY.status = false;\n            }\n        });\n    };\n    Button.prototype.setActiveBoxShadowBlurEventListener = function () {\n        var _this = this;\n        var boxShadowBlurActiveCheckBox = document.getElementById('boxShadowBlurActiveCheckBox');\n        var boxShadowBlurActiveRange = document.getElementById('boxShadowBlurActiveRange');\n        var boxShadowBlurActiveDisplayValue = document.getElementById('boxShadowBlurActiveDisplayValue');\n        if (!(boxShadowBlurActiveCheckBox && boxShadowBlurActiveRange && boxShadowBlurActiveDisplayValue))\n            return;\n        boxShadowBlurActiveRange.addEventListener('input', function (e) {\n            var target = e.target;\n            _this.activeBoxShadowBlur.value = target.value + 'px';\n            boxShadowBlurActiveDisplayValue.innerText = target.value + 'px';\n        });\n        boxShadowBlurActiveCheckBox.addEventListener('change', function (e) {\n            var targetCheckbox = e.target;\n            if (targetCheckbox.checked) {\n                _this.activeBoxShadowBlur.status = true;\n            }\n            else {\n                _this.activeBoxShadowBlur.status = false;\n            }\n        });\n    };\n    Button.prototype.setActiveBoxShadowSpreadEventListener = function () {\n        var _this = this;\n        var boxShadowSpreadActiveCheckBox = document.getElementById('boxShadowSpreadActiveCheckBox');\n        var boxShadowSpreadActiveRange = document.getElementById('boxShadowSpreadActiveRange');\n        var boxShadowSpreadActiveDisplayValue = document.getElementById('boxShadowSpreadActiveDisplayValue');\n        if (!(boxShadowSpreadActiveCheckBox && boxShadowSpreadActiveRange && boxShadowSpreadActiveDisplayValue))\n            return;\n        boxShadowSpreadActiveRange.addEventListener('input', function (e) {\n            var target = e.target;\n            _this.activeBoxShadowSpread.value = target.value + 'px';\n            boxShadowSpreadActiveDisplayValue.innerText = target.value + 'px';\n        });\n        boxShadowSpreadActiveCheckBox.addEventListener('change', function (e) {\n            var targetCheckbox = e.target;\n            if (targetCheckbox.checked) {\n                _this.activeBoxShadowSpread.status = true;\n            }\n            else {\n                _this.activeBoxShadowSpread.status = false;\n            }\n        });\n    };\n    Button.prototype.setActiveBoxShadowColorEventListener = function () {\n        var _this = this;\n        var boxShadowColorActiveCheckBox = document.getElementById('boxShadowColorActiveCheckBox');\n        var boxShadowColorActivePicker = document.getElementById('boxShadowColorActivePicker');\n        var boxShadowColorActiveDisplayValue = document.getElementById('boxShadowColorActiveDisplayValue');\n        if (!(boxShadowColorActiveCheckBox && boxShadowColorActivePicker && boxShadowColorActiveDisplayValue))\n            return;\n        boxShadowColorActivePicker.addEventListener('input', function (e) {\n            var target = e.target;\n            _this.activeBoxShadowColor.value = target.value;\n            boxShadowColorActiveDisplayValue.innerText = target.value;\n        });\n        boxShadowColorActiveCheckBox.addEventListener('change', function (e) {\n            var targetCheckbox = e.target;\n            if (targetCheckbox.checked) {\n                _this.activeBoxShadowColor.status = true;\n            }\n            else {\n                _this.activeBoxShadowColor.status = false;\n            }\n        });\n    };\n    Button.prototype.setActiveBoxShadowOpacityEventListener = function () {\n        var _this = this;\n        var boxShadowOpacityActiveCheckBox = document.getElementById('boxShadowOpacityActiveCheckBox');\n        var boxShadowOpacityActiveRange = document.getElementById('boxShadowOpacityActiveRange');\n        var boxShadowOpacityActiveDisplayValue = document.getElementById('boxShadowOpacityActiveDisplayValue');\n        if (!(boxShadowOpacityActiveCheckBox && boxShadowOpacityActiveRange && boxShadowOpacityActiveDisplayValue))\n            return;\n        boxShadowOpacityActiveRange.addEventListener('input', function (e) {\n            var target = e.target;\n            _this.activeBoxShadowOpacity.value = target.value;\n            boxShadowOpacityActiveDisplayValue.innerText = target.value;\n        });\n        boxShadowOpacityActiveCheckBox.addEventListener('change', function (e) {\n            var targetCheckbox = e.target;\n            if (targetCheckbox.checked) {\n                _this.activeBoxShadowOpacity.status = true;\n            }\n            else {\n                _this.activeBoxShadowOpacity.status = false;\n            }\n        });\n    };\n    Button.prototype.setActiveBackgroundColorEventListener = function () {\n        var _this = this;\n        var backgroundColorActiveCheckBox = document.getElementById('backgroundColorActiveCheckBox');\n        var backgroundColorActivePicker = document.getElementById('backgroundColorActivePicker');\n        var backgroundColorActiveDisplayValue = document.getElementById('backgroundColorActiveDisplayValue');\n        if (!(backgroundColorActiveCheckBox && backgroundColorActivePicker && backgroundColorActiveDisplayValue))\n            return;\n        backgroundColorActivePicker.addEventListener('input', function (e) {\n            var target = e.target;\n            _this.activeBackgroundColor.value = target.value;\n            backgroundColorActiveDisplayValue.innerText = target.value;\n        });\n        backgroundColorActiveCheckBox.addEventListener('change', function (e) {\n            var targetCheckbox = e.target;\n            if (targetCheckbox.checked) {\n                _this.activeBackgroundColor.status = true;\n            }\n            else {\n                _this.activeBackgroundColor.status = false;\n            }\n        });\n    };\n    return Button;\n}());\nexports.Button = Button;\n\n\n//# sourceURL=webpack:///./src/js/button.ts?");

/***/ }),

/***/ "./src/js/index.ts":
/*!*************************!*\
  !*** ./src/js/index.ts ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__webpack_require__(/*! ../stylesheet/index.css */ \"./src/stylesheet/index.css\");\nvar button_1 = __webpack_require__(/*! ./button */ \"./src/js/button.ts\");\nvar button = new button_1.Button('button');\nvar generateCSSCodeButton = document.getElementById('generateCSSCodeButton');\nvar randomStyleClassForGenerateCodeButton = [\n    'randomStyleClass1',\n    'randomStyleClass2',\n    'randomStyleClass3',\n    'randomStyleClass4',\n    'randomStyleClass5',\n];\nvar randomNumber = Math.floor(Math.random() * 5);\ngenerateCSSCodeButton === null || generateCSSCodeButton === void 0 ? void 0 : generateCSSCodeButton.classList.add(randomStyleClassForGenerateCodeButton[randomNumber]);\ngenerateCSSCodeButton === null || generateCSSCodeButton === void 0 ? void 0 : generateCSSCodeButton.addEventListener('click', function () {\n    var generatedCSSCodeArea = document.getElementById('generateCSSCodeArea');\n    var generatedCSSCode = document.querySelector('#generateCSSCodeArea pre');\n    if (generatedCSSCodeArea && generatedCSSCode) {\n        var boxShadowRedValue = parseInt(button.boxShadowColor.slice(1, 3), 16);\n        var boxShadowGreenValue = parseInt(button.boxShadowColor.slice(3, 5), 16);\n        var boxShadowBlueValue = parseInt(button.boxShadowColor.slice(5, 7), 16);\n        var hoverBoxShadowRedValue = parseInt(button.hoverBoxShadowColor.value.slice(1, 3), 16);\n        var hoverBoxShadowGreenValue = parseInt(button.hoverBoxShadowColor.value.slice(3, 5), 16);\n        var hoverBoxShadowBlueValue = parseInt(button.hoverBoxShadowColor.value.slice(5, 7), 16);\n        var activeBoxShadowRedValue = parseInt(button.activeBoxShadowColor.value.slice(1, 3), 16);\n        var activeBoxShadowGreenValue = parseInt(button.activeBoxShadowColor.value.slice(3, 5), 16);\n        var activeBoxShadowBlueValue = parseInt(button.activeBoxShadowColor.value.slice(5, 7), 16);\n        var cssCode_1 = \".button {\\n  height: \" + button.height + \";\\n  width: \" + button.width + \";\\n  border: \" + button.borderStyle + \" \" + button.borderWidth + \" \" + button.borderColor + \";\\n  border-radius: \" + button.borderRadius + \";\\n  font-size: \" + button.fontSize + \";\\n  font-weight: \" + button.fontWeight + \";\\n  color: \" + button.color + \";\\n  box-shadow: \" + button.boxShadowX + \" \" + button.boxShadowY + \" \" + button.boxShadowBlur + \" \" + button.boxShadowSpread + \" rgba(\" + boxShadowRedValue + \", \" + boxShadowGreenValue + \", \" + boxShadowBlueValue + \", \" + button.boxShadowOpacity + \");\\n  background-color: \" + button.backgroundColor + \";\\n}\\n\\n.button:hover {\\n  border-color: \" + button.hoverBorderColor.value + \";\\n  color: \" + button.hoverColor.value + \";\\n  box-shadow: \" + button.hoverBoxShadowX.value + \" \" + button.hoverBoxShadowY.value + \" \" + button.hoverBoxShadowBlur.value + \" \" + button.hoverBoxShadowSpread.value + \" rgba(\" + hoverBoxShadowRedValue + \", \" + hoverBoxShadowGreenValue + \", \" + hoverBoxShadowBlueValue + \", \" + button.hoverBoxShadowOpacity.value + \");\\n  background-color: \" + button.hoverBackgroundColor.value + \";\\n}\\n\\n.button:active {\\n  border-color: \" + button.activeBorderColor.value + \";\\n  color: \" + button.activeColor.value + \";\\n  box-shadow: \" + button.activeBoxShadowX.value + \" \" + button.activeBoxShadowY.value + \" \" + button.activeBoxShadowBlur.value + \" \" + button.activeBoxShadowSpread.value + \" rgba(\" + activeBoxShadowRedValue + \", \" + activeBoxShadowGreenValue + \", \" + activeBoxShadowBlueValue + \", \" + button.activeBoxShadowOpacity.value + \");\\n  background-color: \" + button.activeBackgroundColor.value + \";\\n}\";\n        generatedCSSCodeArea.style.display = 'inherit';\n        generatedCSSCode.innerText = cssCode_1;\n        var copyCSSCodeTab = document.getElementById('copyCSSCode');\n        copyCSSCodeTab === null || copyCSSCodeTab === void 0 ? void 0 : copyCSSCodeTab.addEventListener('click', function () {\n            var copyCodeForm = document.createElement('textarea');\n            copyCodeForm.textContent = cssCode_1;\n            generatedCSSCodeArea.appendChild(copyCodeForm);\n            copyCodeForm.select();\n            document.execCommand('copy');\n            generatedCSSCodeArea.removeChild(copyCodeForm);\n        });\n    }\n});\n\n\n//# sourceURL=webpack:///./src/js/index.ts?");

/***/ }),

/***/ "./src/stylesheet/index.css":
/*!**********************************!*\
  !*** ./src/stylesheet/index.css ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var api = __webpack_require__(/*! ../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = __webpack_require__(/*! !../../node_modules/css-loader/dist/cjs.js??ref--5-1!./index.css */ \"./node_modules/css-loader/dist/cjs.js?!./src/stylesheet/index.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.i, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};\n\n//# sourceURL=webpack:///./src/stylesheet/index.css?");

/***/ })

/******/ });